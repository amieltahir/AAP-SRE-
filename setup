trsadmin@trscore:~/aap_lab/2.4_rhel9$ wget --no-check-certificate --content-disposition "https://access.cdn.redhat.com/content/origin/files/sha256/64/64d6f7661271faeae6491ab946d79d87ed87f2446490211840448eaf06929ee4/ansible-automation-platform-setup-bundle-2.4-13.4-x86_64.tar.gz?user=282b9163b4bb0674d4f1f3a5219907f2&_auth_=1761287879_6f314ba54db1a0da3c880cf4bbbfaaa7"

tar -xvf  ansible-automation-platform-setup-bundle-2.4-13.4-x86_64.tar.gz


### #################install terraform ##########

sudo apt-get update -y
sudo apt-get install -y gnupg software-properties-common curl
curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
sudo apt-get update -y
sudo apt-get install -y terraform
####################################

### #################install aws-cli ##########

sudo apt-get install -y unzip
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install
aws --version
aws configure

stored in 
~/.aws/credentials
~/.aws/config

export AWS_ACCESS_KEY_ID="YOUR_ACCESS_KEY"
export AWS_SECRET_ACCESS_KEY="YOUR_SECRET_KEY"
export AWS_DEFAULT_REGION="us-east-1"

add in end of file 
 vi ~/.bashrc
 source ~/.bashrc
aws sts get-caller-identity 


####################################

after we prepared files in terraform now we execute 

 terraform init
Initializing the backend...
Initializing provider plugins...
- Finding latest version of hashicorp/aws...
- Finding latest version of hashicorp/local...
- Finding latest version of hashicorp/tls...
- Installing hashicorp/aws v6.18.0...
- Installed hashicorp/aws v6.18.0 (signed by HashiCorp)
- Installing hashicorp/local v2.5.3...
- Installed hashicorp/local v2.5.3 (signed by HashiCorp)
- Installing hashicorp/tls v4.1.0...
- Installed hashicorp/tls v4.1.0 (signed by HashiCorp)
Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.

----

terraform planvi
